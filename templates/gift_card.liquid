{% layout none %}

<!doctype html>
<html lang="{{ request.locale.iso_code }}">
  <head>
    <script src="{{ 'vendor/qrcode.js' | shopify_asset_url }}" defer></script>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="{{ settings.color_background }}">
    <link rel="canonical" href="{{ canonical_url }}">

    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    {%- assign formatted_balance = gift_card.balance | money_without_trailing_zeros | strip_html -%}

    <title>{{ 'gift_cards.issued.title' | t: value: formatted_balance, shop: shop.name }}</title>

    <meta name="description" content="{{ 'gift_cards.issued.subtext' | t }}">

    {{ content_for_header }}

    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
      {{ settings.type_body_font | font_face: font_display: 'swap' }}
      {{ body_font_bold | font_face: font_display: 'swap' }}
      {{ body_font_italic | font_face: font_display: 'swap' }}
      {{ body_font_bold_italic | font_face: font_display: 'swap' }}
      {{ settings.type_header_font | font_face: font_display: 'swap' }}

      :root {
        --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
        --font-body-style: {{ settings.type_body_font.style }};
        --font-body-weight: {{ settings.type_body_font.weight }};

        --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
        --font-heading-style: {{ settings.type_header_font.style }};
        --font-heading-weight: {{ settings.type_header_font.weight }};

        --font-body-scale: {{ settings.body_scale | divided_by: 100.0 }};
        --font-heading-scale: {{ settings.heading_scale | times: 1.0 | divided_by: settings.body_scale }};

        {% assign scheme = settings.color_schemes | first %}
        --color-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        {% if scheme.settings.background_gradient != empty -%}
          --gradient-background: {{ scheme.settings.background_gradient }};
        {%- else -%}
          --gradient-background: {{ scheme.settings.background }};
        {%- endif %}
        --color-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
        --color-button: {{ scheme.settings.button.red }},{{ scheme.settings.button.green }},{{ scheme.settings.button.blue }};
        --color-button-label: {{ scheme.settings.button_label.red }},{{ scheme.settings.button_label.green }},{{ scheme.settings.button_label.blue }};
        --color-secondary-button-label: {{ scheme.settings.secondary_button_label.red }},{{ scheme.settings.secondary_button_label.green }},{{ scheme.settings.secondary_button_label.blue }};
        --color-shadow: {{ scheme.settings.shadow.red }},{{ scheme.settings.shadow.green }},{{ scheme.settings.shadow.blue }};

        {% assign badge_scheme_id = settings.sold_out_badge_color_scheme | append: '' %}
        {% assign badge_scheme = settings.color_schemes[badge_scheme_id] %}
        --color-soldout-badge: {{ badge_scheme.settings.background.red }},{{ badge_scheme.settings.background.green }},{{ badge_scheme.settings.background.blue }};
        --color-soldout-badge-label: {{ badge_scheme.settings.text.red }},{{ badge_scheme.settings.text.green }},{{ badge_scheme.settings.text.blue }};

        --page-width: {{ settings.page_width | divided_by: 10 }}rem;
        --page-width-margin: {% if settings.page_width == '1600' %}2{% else %}0{% endif %}rem;

        --buttons-radius: {{ settings.buttons_radius }}px;
        --buttons-border-width: {% if settings.buttons_border_opacity > 0 %}{{ settings.buttons_border_thickness }}{% else %}0{% endif %}px;
        --buttons-border-opacity: {{ settings.buttons_border_opacity | divided_by: 100.0 }};
        --buttons-shadow-opacity: {{ settings.buttons_shadow_opacity | divided_by: 100.0 }};
        --buttons-shadow-horizontal-offset: {{ settings.buttons_shadow_horizontal_offset }}px;
        --buttons-shadow-vertical-offset: {{ settings.buttons_shadow_vertical_offset }}px;
        --buttons-shadow-blur-radius: {{ settings.buttons_shadow_blur }}px;
        --buttons-border-offset: {% if settings.buttons_radius > 0 or settings.buttons_shadow_opacity > 0 %}0.3{% else %}0{% endif %}px;

        --inputs-radius: {{ settings.inputs_radius }}px;
        --inputs-border-width: {{ settings.inputs_border_thickness }}px;
        --inputs-border-opacity: {{ settings.inputs_border_opacity | divided_by: 100.0 }};
        --inputs-shadow-opacity: {{ settings.inputs_shadow_opacity | divided_by: 100.0 }};
        --inputs-shadow-horizontal-offset: {{ settings.inputs_shadow_horizontal_offset }}px;
        --inputs-shadow-vertical-offset: {{ settings.inputs_shadow_vertical_offset }}px;
        --inputs-shadow-blur-radius: {{ settings.inputs_shadow_blur }}px;
      }
    {% endstyle %}

    {%- unless settings.type_body_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}

    {% style %}
    *, *::before, *::after {
      box-sizing: inherit;
    }
    a, ul, dl, div, section, article, p, h1, h2, h3, h4, h5, h6 {
      &:empty {
        display: none;
      }
    }
    html {
      font-size: calc(var(--font-body-scale) * 62.5%);
      box-sizing: border-box;
      height: 100%;
    }
    body {
      background-color: rgb(var(--color-background));
      color: rgb(var(--color-foreground));
      letter-spacing: 0.07rem;
      line-height: calc(1 + 0.8 / var(--font-body-scale));
      max-width: var(--page-width);
      margin: 0 auto;
      flex: 1 0 auto;
      font-family: var(--font-body-family);
      font-style: var(--font-body-style);
      font-weight: var(--font-body-weight);
    }
    ::selection {
      background-color: rgba(var(--color-foreground), 0.2);
    }
    h1, .h1, h2, .h2 {
      font-family: var(--font-heading-family);
      font-style: var(--font-heading-style);
      font-weight: var(--font-heading-weight);
      letter-spacing: calc(var(--font-heading-scale) * 0.06rem);
      line-height: calc(1 + 0.3 / max(1, var(--font-heading-scale)));
      text-align: center;
    }
    h1, .h1 {
      font-size: calc(var(--font-heading-scale) * 3rem);
    }
    h2, .h2 {
      font-size: calc(var(--font-heading-scale) * 2rem);
    }
    .button {
      font-family: inherit;
      cursor: pointer;
      display: inline-flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      border: none;
      padding: 1.5rem 3rem;
      text-decoration: none;
      background-color: rgb(var(--color-button));
      box-shadow: 0 0 0 0.1rem rgb(var(--color-button));
      color: rgb(var(--color-button-label));
      min-width: 12rem;
      height: auto;
      font-size: 1.5rem;
      letter-spacing: 0.1rem;
      line-height: calc(1 + 0.2 / var(--font-body-scale));
      &::selection {
        background-color: rgba(var(--color-button-label), 0.3);
      }
      &:hover {
        box-shadow: 0 0 0 0.2rem rgb(var(--color-button));
      }
    }
    .button--secondary {
      color: rgb(var(--color-secondary-button-label));
      box-shadow: 0 0 0 0.1rem rgb(var(--color-secondary-button-label));
      background-color: transparent;
      &::selection {
        background-color: rgba(var(--color-secondary-button-label), 0.3);
      }
      &:hover {
        box-shadow: 0 0 0 0.2rem rgb(var(--color-secondary-button-label));
      }
    }
    .gift-card {
      padding: 3rem;
    }
    .gift-card__image-wrapper {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100%;
      margin: 3rem auto;
      max-width: 40rem;
    }
    .gift-card__image {
      max-width: 100%;
      height: auto;
      object-fit: scale-down;
      max-height: 26rem;
    }
    .gift-card__price {
      display: flex;
      flex-wrap: wrap;
      gap: 0rem 1rem;
      align-items: center;
      justify-content: center;
      letter-spacing: 1px;
      opacity: 0.8;
      h1 {
        margin: 0;
      }
    }
    .gift-card__number {
      color: rgb(var(--color-foreground));
      font-size: 1.8rem;
      line-height: calc(1 + 0.6 / var(--font-body-scale));
      text-align: center;
      letter-spacing: 0.25rem;
      opacity: 0.8;
      margin: 3rem 0;
    }
    .gift-card__text-wrapper {
      max-width: 30rem;
      margin: 0 auto;
    }
    .gift-card__text {
      text-align: center;
      font-size: 1.7rem;
      opacity: 0.6;
      margin: 0;
      line-height: calc(1 + 0.5 / var(--font-body-scale));
    }
    .badge {
      border: 1px solid transparent;
      border-radius: 4rem;
      display: inline-block;
      font-size: 1.2rem;
      letter-spacing: 0.1rem;
      line-height: 1;
      padding: 0.6rem 1.3rem;
      text-align: center;
      background-color: rgb(var(--color-background));
      border-color: rgba(var(--color-foreground), 0.04);
      color: rgb(var(--color-foreground));
    }
    .badge--expired {
      background-color: rgb(var(--color-soldout-badge));
      color: rgb(var(--color-soldout-badge-label));
      border-color: rgba(var(--color-soldout-badge-label), 0.04);
    }
    .gift-card__qr-code {
      margin: 3rem 0;
      img {
        margin: 0 auto;
      }
    }
    .gift_card__apple-wallet {
      line-height: 0;
      display: block;
      margin-bottom: 3rem;
      text-align: center;
    }
    .gift-card__buttons {
      display: flex;
      flex-direction: column;
      max-width: 25rem;
      flex-wrap: wrap;
      margin: 0 auto;
      > .button {
        display: block;
        margin: 1rem 0;
      }
    }
    *:focus {
      outline: 0;
      box-shadow: none;
    }
    *:focus-visible, .focused {
      outline: 0.2rem solid rgba(var(--color-foreground), 0.5);
      outline-offset: 0.3rem;
      box-shadow: 0 0 0 0.3rem rgb(var(--color-background)), 0 0 0.5rem 0.4rem rgba(var(--color-foreground), 0.3);
    }
    .button:focus-visible, .button:focus {
      box-shadow: 0 0 0 0.1rem rgb(var(--color-button)), 0 0 0 0.3rem rgb(var(--color-background)),
        0 0 0.5rem 0.4rem rgba(var(--color-foreground), 0.3);
    }
    .button--secondary:focus-visible, .button--secondary:focus {
      box-shadow: 0 0 0 0.1rem rgb(var(--color-secondary-button-label)), 0 0 0 0.3rem rgb(var(--color-background)),
        0 0 0.5rem 0.4rem rgba(var(--color-foreground), 0.3);
    }
    .form__message {
      align-items: center;
      display: flex;
      font-size: 1.2rem;
      line-height: 1.5rem;
      justify-content: center;
      margin-bottom: 0.5rem;
      opacity: 0.8;
      .icon {
        flex-shrink: 0;
        height: 1.3rem;
        margin-right: 0.5rem;
        width: 1.3rem;
      }
    }
    .gradient {
      background: rgb(var(--color-background));
      background: var(--gradient-background);
      background-attachment: fixed;
    }
    @media only screen and (min-width: 750px) {
      body {
        line-height: calc(1 + 0.8 / var(--font-body-scale));
      }
      h1, .h1 {
        font-size: calc(var(--font-heading-scale) * 4rem);
      }
      h2, .h2 {
        font-size: calc(var(--font-heading-scale) * 2.4rem);
      }
      .gift-card {
        padding: 5rem 5rem 3rem;
      }
      .gift-card__image {
        padding: 0;
      }
    }
    @media (forced-colors: active) {
      .button {
        border: transparent solid 1px;
      }
    }
    @media print {
      .no-print {
        display: none;
      }
    }
    {% endstyle %}

    {% comment %} {{ 'template-giftcard.css' | asset_url | stylesheet_tag }} {% endcomment %}
  </head>

  <body class="gradient gift-card">
    <header>
      <div class="gift-card__price">
        <h1>
          {% if settings.currency_code_enabled %}
            {{ gift_card.balance | money_with_currency }}
          {% else %}
            {{ gift_card.balance | money }}
          {% endif %}
        </h1>
        {%- if gift_card.enabled == false or gift_card.expired -%}
          <p class="badge badge--expired">{{ 'gift_cards.issued.expired' | t }}</p>
        {%- endif -%}
      </div>
      {% if gift_card.expires_on %}
        {%- assign gift_card_expiration_date = gift_card.expires_on | date: '%B %e, %Y' -%}
        <p class="gift-card__text">
          {{ 'gift_cards.issued.expiration_date' | t: expires_on: gift_card_expiration_date }}
        </p>
      {% endif %}
    </header>

    <main>
      <div class="gift-card__image-wrapper">
        {%- if settings.logo != blank -%}
          {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
          {{ settings.logo | image_url: width: 570 | image_tag: class: 'gift-card__image', alt: logo_alt }}
        {%- else %}
          <img
            class="gift-card__image"
            src="{{ 'gift-card/card.svg' | shopify_asset_url }}"
            alt=""
            height="{{ 570 | divided_by: 1.5 }}"
            width="570"
            loading="eager"
          >
        {%- endif %}
      </div>
      <h2>{{ shop.name }}</h2>
      <div class="gift-card__text-wrapper">
        <p class="gift-card__text">{{ 'gift_cards.issued.how_to_use_gift_card' | t }}</p>
      </div>
      <p id="gift-card-code" class="gift-card__number">{{ gift_card.code | format_code }}</p>
      <div class="gift-card__qr-code" data-identifier="{{ gift_card.qr_identifier }}"></div>
      {%- if gift_card.pass_url -%}
        <a href="{{ gift_card.pass_url }}" class="gift_card__apple-wallet no-print">
          <img
            src="{{ 'gift-card/add-to-apple-wallet.svg' | shopify_asset_url }}"
            width="120"
            height="40"
            alt="{{ 'gift_cards.issued.add_to_apple_wallet' | t }}"
            loading="lazy"
          >
        </a>
      {%- endif -%}
      <div class="gift-card__buttons no-print">
        <span class="gift-card__copy-success form__message" role="status"></span>
        <template>
          <span class="svg-wrapper">
            {% render 'icons', icon: 'success' %}
          </span>
          {{ 'gift_cards.issued.copy_code_success' | t }}
        </template>
        <button class="button gift-card__copy-button">{{ 'gift_cards.issued.copy_code' | t }}</button>
        <a
          href="{{ shop.url }}"
          class="button button--secondary"
          target="_blank"
          rel="noopener"
          aria-describedby="a11y-new-window-message"
        >
          {{ 'gift_cards.issued.shop_link' | t }}
        </a>
      </div>
    </main>

    <div hidden>
      <span id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</span>
    </div>
  </body>
</html>

<script>
  var string = { qrImageAlt: {{ 'gift_cards.issued.qr_image_alt' | t | json }} };
  document.addEventListener('DOMContentLoaded', function() {
   new QRCode( document.querySelector('.gift-card__qr-code'), {
    text: document.querySelector('.gift-card__qr-code').dataset.identifier,
    width: 72,
    height: 72,
    imageAltText: string.qrImageAlt
    });
  });
  var template = document.getElementsByTagName("template")[0];
  var clonedTemplate = template.content.cloneNode(true);
  var isMessageDisplayed = false
  document
  .querySelector('.gift-card__copy-button')
  .addEventListener('click', () => {
    navigator.clipboard.writeText(document.getElementById('gift-card-code').innerText).then(function () {
      if (!isMessageDisplayed) {
        document.querySelector('.gift-card__copy-success').appendChild(clonedTemplate);
        isMessageDisplayed = true
      }
    });
  });
</script>

{% comment %}
  Renders product variant-picker

  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} Id of the product form to which the variant picker is associated.
  Usage:
  {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
{% endcomment %}

{% style %}
/* ————— Variant Picker ———————————————————— */
variant-selects {
  display: block;
}
.product--no-media {
  .product-form__input--pill,
  .product-form__input--swatch,
  .product-form__input--dropdown {
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
  }
  .product-form__input.product-form__input--pill,
  .product-form__input.product-form__input--swatch {
    flex-wrap: wrap;
    margin: 0 auto 1.2rem auto;
  }
  .product-form__input--dropdown {
    flex-direction: column;
    max-width: 100%;
  }
}
:is(.product-form__input--pill, .product-form__input--swatch) .form__label {
  margin-bottom: 0.2rem;
}
.product-form__input input[type='radio'] {
  clip: rect(0, 0, 0, 0);
  overflow: hidden;
  position: absolute;
  height: 1px;
  width: 1px;
  &:not(.disabled):not(.visually-disabled) + label > .label-unavailable {
    display: none;
  }
}
.product-form__input--dropdown {
  --swatch-input--size: 2rem;
  margin-bottom: 1.6rem;
  .dropdown-swatch {
    position: absolute;
    left: 1.6rem;
    top: calc(50% - var(--swatch-input--size) / 2);
    width: var(--swatch-input--size);
    height: var(--swatch-input--size);
    z-index: 1;
    + select {
      padding-left: calc(2.4rem + var(--swatch-input--size));
    }
  }
}
/* Pill */
.product-form__input--pill input[type='radio'] {
  + label {
    border: var(--variant-pills-border-width) solid rgba(var(--color-foreground), var(--variant-pills-border-opacity));
    background-color: rgb(var(--color-background));
    color: rgba(var(--color-foreground));
    border-radius: var(--variant-pills-radius);
    color: rgb(var(--color-foreground));
    display: inline-block;
    margin: 0.7rem 0.5rem 0.2rem 0;
    padding: 1rem 2rem;
    font-size: 1.4rem;
    letter-spacing: 0.1rem;
    line-height: 1;
    text-align: center;
    transition: border var(--duration-short) ease;
    cursor: pointer;
    position: relative;
    &:before {
      content: '';
      position: absolute;
      top: calc(var(--variant-pills-border-width) * -1);
      right: calc(var(--variant-pills-border-width) * -1);
      bottom: calc(var(--variant-pills-border-width) * -1);
      left: calc(var(--variant-pills-border-width) * -1);
      z-index: -1;
      border-radius: var(--variant-pills-radius);
      box-shadow: var(--variant-pills-shadow-horizontal-offset) var(--variant-pills-shadow-vertical-offset)
        var(--variant-pills-shadow-blur-radius) rgba(var(--color-shadow), var(--variant-pills-shadow-opacity));
    }
    &:hover {
      border-color: rgb(var(--color-foreground));
    }
  }
  &:checked + label {
    background-color: rgb(var(--color-foreground));
    color: rgb(var(--color-background));
    &::selection {
      background-color: rgba(var(--color-background), 0.3);
    }
  }
  &:disabled, &.disabled {
    + label {
      border-color: rgba(var(--color-foreground), 0.1);
      color: rgba(var(--color-foreground), 0.6);
      text-decoration: line-through;
    }
    &:checked + label {
      color: rgba(var(--color-background), 0.6);
    }
  }
  &:focus-visible + label {
    box-shadow: 0 0 0 0.3rem rgb(var(--color-background)), 0 0 0 0.5rem rgba(var(--color-foreground), 0.55);
  }
  /* Fallback */
  &.focused + label {
    box-shadow: 0 0 0 0.3rem rgb(var(--color-background)), 0 0 0 0.5rem rgba(var(--color-foreground), 0.55);
  }
}
@media screen and (forced-colors: active) {
  .product-form__input--pill input[type='radio'] {
    &:checked + label {
      text-decoration: underline;
    }
    &:focus-visible + label {
      outline: transparent solid 1px;
      outline-offset: 2px;
    }
  }
}
/* Swatch */
.product-form__input--swatch {
  display: flex;
  flex-wrap: wrap;
  .swatch-input__input + .swatch-input__label {
    --swatch-input--size: 3.6rem;
    margin: 0.7rem 1.2rem 0.2rem 0;
  }
}
@media screen and (min-width: 750px) {
  .product-form__input--swatch .swatch-input__input + .swatch-input__label {
    --swatch-input--size: 2.8rem;
  }
}
{% endstyle %}

{%- unless product.has_only_default_variant -%}
  <variant-selects
    id="variant-selects-{{ section.id }}"
    data-section="{{ section.id }}"
    {{ block.shopify_attributes }}
  >
    {%- for option in product.options_with_values -%}
      {%- liquid
        assign swatch_count = option.values | map: 'swatch' | compact | size
        assign picker_type = block.settings.picker_type

        if swatch_count > 0 and block.settings.swatch_shape != 'none'
          if block.settings.picker_type == 'dropdown'
            assign picker_type = 'swatch_dropdown'
          else
            assign picker_type = 'swatch'
          endif
        endif
      -%}
      {%- if picker_type == 'swatch' -%}
        <fieldset class="js product-form__input product-form__input--swatch">
          <legend class="form__label">
            {{ option.name }}:
            <span data-selected-value>
              {{- option.selected_value -}}
            </span>
          </legend>
          {% render 'product-variant-options',
            product: product,
            option: option,
            block: block,
            picker_type: picker_type
          %}
        </fieldset>
      {%- elsif picker_type == 'button' -%}
        <fieldset class="js product-form__input product-form__input--pill">
          <legend class="form__label">{{ option.name }}</legend>
          {% render 'product-variant-options',
            product: product,
            option: option,
            block: block,
            picker_type: picker_type
          %}
        </fieldset>
      {%- else -%}
        <div class="product-form__input product-form__input--dropdown">
          <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
            {{ option.name }}
          </label>
          <div class="select">
            {%- if picker_type == 'swatch_dropdown' -%}
              <span
                data-selected-value
                class="dropdown-swatch"
              >
                {% render 'swatch', swatch: option.selected_value.swatch, shape: block.settings.swatch_shape %}
              </span>
            {%- endif -%}
            <select
              id="Option-{{ section.id }}-{{ forloop.index0 }}"
              class="select__select"
              name="options[{{ option.name | escape }}]"
              form="{{ product_form_id }}"
            >
              {% render 'product-variant-options',
                product: product,
                option: option,
                block: block,
                picker_type: picker_type
              %}
            </select>
            <span class="svg-wrapper">
              {% render 'icons', icon: 'caret' %}
            </span>
          </div>
        </div>
      {%- endif -%}
    {%- endfor -%}

    <script type="application/json" data-selected-variant>
      {{ product.selected_or_first_available_variant | json }}
    </script>
  </variant-selects>
{%- endunless -%}
